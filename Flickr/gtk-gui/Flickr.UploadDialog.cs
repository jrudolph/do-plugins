// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Flickr {
    
    
    public partial class UploadDialog {
        
        private Gtk.Alignment alignment1;
        
        private Gtk.VBox vbox3;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Image FlickrImage;
        
        private Gtk.Label TextLabel;
        
        private Gtk.ProgressBar uploadProgress;
        
        private Gtk.Button HideButton;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget Flickr.UploadDialog
            this.Name = "Flickr.UploadDialog";
            this.Title = Mono.Unix.Catalog.GetString("Flickr Upload");
            this.Icon = Gdk.Pixbuf.LoadFromResource("flickr.png");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Resizable = false;
            this.AllowGrow = false;
            this.SkipTaskbarHint = true;
            this.HasSeparator = false;
            // Internal child Flickr.UploadDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            this.alignment1.LeftPadding = ((uint)(10));
            this.alignment1.TopPadding = ((uint)(10));
            this.alignment1.RightPadding = ((uint)(10));
            this.alignment1.BottomPadding = ((uint)(10));
            // Container child alignment1.Gtk.Container+ContainerChild
            this.vbox3 = new Gtk.VBox();
            this.vbox3.Name = "vbox3";
            this.vbox3.Spacing = 6;
            // Container child vbox3.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.FlickrImage = new Gtk.Image();
            this.FlickrImage.Name = "FlickrImage";
            this.hbox1.Add(this.FlickrImage);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.FlickrImage]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.TextLabel = new Gtk.Label();
            this.TextLabel.Name = "TextLabel";
            this.hbox1.Add(this.TextLabel);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.TextLabel]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            this.vbox3.Add(this.hbox1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox3[this.hbox1]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.uploadProgress = new Gtk.ProgressBar();
            this.uploadProgress.Name = "uploadProgress";
            this.vbox3.Add(this.uploadProgress);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox3[this.uploadProgress]));
            w5.Position = 1;
            w5.Expand = false;
            w5.Fill = false;
            this.alignment1.Add(this.vbox3);
            w1.Add(this.alignment1);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(w1[this.alignment1]));
            w7.Position = 0;
            w7.Expand = false;
            w7.Fill = false;
            // Internal child Flickr.UploadDialog.ActionArea
            Gtk.HButtonBox w8 = this.ActionArea;
            w8.Name = "dialog1_ActionArea";
            w8.Spacing = 6;
            w8.BorderWidth = ((uint)(5));
            w8.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.HideButton = new Gtk.Button();
            this.HideButton.CanDefault = true;
            this.HideButton.CanFocus = true;
            this.HideButton.Name = "HideButton";
            this.HideButton.UseUnderline = true;
            // Container child HideButton.Gtk.Container+ContainerChild
            Gtk.Alignment w9 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w10 = new Gtk.HBox();
            w10.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w11 = new Gtk.Image();
            w11.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-leave-fullscreen", Gtk.IconSize.LargeToolbar, 24);
            w10.Add(w11);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w13 = new Gtk.Label();
            w13.LabelProp = Mono.Unix.Catalog.GetString("_Hide");
            w13.UseUnderline = true;
            w10.Add(w13);
            w9.Add(w10);
            this.HideButton.Add(w9);
            this.AddActionWidget(this.HideButton, 0);
            Gtk.ButtonBox.ButtonBoxChild w17 = ((Gtk.ButtonBox.ButtonBoxChild)(w8[this.HideButton]));
            w17.Expand = false;
            w17.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 428;
            this.DefaultHeight = 149;
            this.Show();
        }
    }
}
