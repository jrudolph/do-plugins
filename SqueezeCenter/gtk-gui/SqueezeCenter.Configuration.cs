// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace SqueezeCenter {
    
    
    public partial class Configuration {
        
        private Gtk.Table table1;
        
        private Gtk.Button button1;
        
        private Gtk.CheckButton chkLoadInBackground;
        
        private Gtk.Label label2;
        
        private Gtk.Label label5;
        
        private Gtk.Label label6;
        
        private Gtk.Label label7;
        
        private Gtk.Label label8;
        
        private Gtk.Entry txtHost;
        
        private Gtk.Entry txtPortCli;
        
        private Gtk.Entry txtPortWeb;
        
        private Gtk.Entry txtRadios;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget SqueezeCenter.Configuration
            Stetic.BinContainer.Attach(this);
            this.Name = "SqueezeCenter.Configuration";
            // Container child SqueezeCenter.Configuration.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(6)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.button1 = new Gtk.Button();
            this.button1.CanFocus = true;
            this.button1.Name = "button1";
            this.button1.UseStock = true;
            this.button1.UseUnderline = true;
            this.button1.Label = "gtk-save";
            this.table1.Add(this.button1);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.button1]));
            w1.TopAttach = ((uint)(5));
            w1.BottomAttach = ((uint)(6));
            w1.LeftAttach = ((uint)(1));
            w1.RightAttach = ((uint)(2));
            w1.XOptions = ((Gtk.AttachOptions)(4));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.chkLoadInBackground = new Gtk.CheckButton();
            this.chkLoadInBackground.CanFocus = true;
            this.chkLoadInBackground.Name = "chkLoadInBackground";
            this.chkLoadInBackground.Label = Mono.Unix.Catalog.GetString("Load items in background");
            this.chkLoadInBackground.DrawIndicator = true;
            this.chkLoadInBackground.UseUnderline = true;
            this.table1.Add(this.chkLoadInBackground);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.chkLoadInBackground]));
            w2.TopAttach = ((uint)(3));
            w2.BottomAttach = ((uint)(4));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(0));
            // Container child table1.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Comma-seperated list of radios to load");
            this.table1.Add(this.label2);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.label2]));
            w3.TopAttach = ((uint)(4));
            w3.BottomAttach = ((uint)(5));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.Xalign = 0F;
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("Host-name of SqueezeCenter server");
            this.table1.Add(this.label5);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.label5]));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label6 = new Gtk.Label();
            this.label6.Name = "label6";
            this.label6.Xalign = 0F;
            this.label6.LabelProp = Mono.Unix.Catalog.GetString("Port of the SqueezeCenter server cli interface");
            this.table1.Add(this.label6);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.label6]));
            w5.TopAttach = ((uint)(1));
            w5.BottomAttach = ((uint)(2));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label7 = new Gtk.Label();
            this.label7.Name = "label7";
            this.label7.Xalign = 0F;
            this.label7.LabelProp = Mono.Unix.Catalog.GetString("Port of the SqueezeCenter server web interface");
            this.table1.Add(this.label7);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.label7]));
            w6.TopAttach = ((uint)(2));
            w6.BottomAttach = ((uint)(3));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label8 = new Gtk.Label();
            this.label8.Name = "label8";
            this.label8.Xalign = 0F;
            this.label8.LabelProp = Mono.Unix.Catalog.GetString("Load artist, albums and radio in the background when loading DO. \nIf set to unchecked, these items are loaded when DO is loading causing a delay until all items are loaded.");
            this.label8.Wrap = true;
            this.table1.Add(this.label8);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.label8]));
            w7.TopAttach = ((uint)(3));
            w7.BottomAttach = ((uint)(4));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtHost = new Gtk.Entry();
            this.txtHost.CanFocus = true;
            this.txtHost.Name = "txtHost";
            this.txtHost.IsEditable = true;
            this.txtHost.InvisibleChar = '●';
            this.table1.Add(this.txtHost);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.txtHost]));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtPortCli = new Gtk.Entry();
            this.txtPortCli.CanFocus = true;
            this.txtPortCli.Name = "txtPortCli";
            this.txtPortCli.IsEditable = true;
            this.txtPortCli.InvisibleChar = '●';
            this.table1.Add(this.txtPortCli);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this.txtPortCli]));
            w9.TopAttach = ((uint)(1));
            w9.BottomAttach = ((uint)(2));
            w9.LeftAttach = ((uint)(1));
            w9.RightAttach = ((uint)(2));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtPortWeb = new Gtk.Entry();
            this.txtPortWeb.CanFocus = true;
            this.txtPortWeb.Name = "txtPortWeb";
            this.txtPortWeb.IsEditable = true;
            this.txtPortWeb.InvisibleChar = '●';
            this.table1.Add(this.txtPortWeb);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table1[this.txtPortWeb]));
            w10.TopAttach = ((uint)(2));
            w10.BottomAttach = ((uint)(3));
            w10.LeftAttach = ((uint)(1));
            w10.RightAttach = ((uint)(2));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtRadios = new Gtk.Entry();
            this.txtRadios.CanFocus = true;
            this.txtRadios.Name = "txtRadios";
            this.txtRadios.IsEditable = true;
            this.txtRadios.InvisibleChar = '●';
            this.table1.Add(this.txtRadios);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table1[this.txtRadios]));
            w11.TopAttach = ((uint)(4));
            w11.BottomAttach = ((uint)(5));
            w11.LeftAttach = ((uint)(1));
            w11.RightAttach = ((uint)(2));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            this.Add(this.table1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.button1.Clicked += new System.EventHandler(this.OntbnSaveClicked);
        }
    }
}
