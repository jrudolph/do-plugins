// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Confluence {
    
    
    public partial class ConfluenceConfigWidget {
        
        private Gtk.Table table1;
        
        private Gtk.Entry _entryBaseUrl;
        
        private Gtk.Entry _entryMaxSearchResults;
        
        private Gtk.Entry _entryPassword;
        
        private Gtk.Entry _entryUsername;
        
        private Gtk.Label _labelBaseUrl;
        
        private Gtk.Label _labelBaseUrl1;
        
        private Gtk.Label _labelMaxSearchResults;
        
        private Gtk.Label _labelPassword;
        
        private Gtk.Label _labelUsername;
        
        private Gtk.Button _saveButton;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget Confluence.ConfluenceConfigWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "Confluence.ConfluenceConfigWidget";
            // Container child Confluence.ConfluenceConfigWidget.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(6)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this._entryBaseUrl = new Gtk.Entry();
            Gtk.Tooltips w1 = new Gtk.Tooltips();
            w1.SetTip(this._entryBaseUrl, "The base url location to your Confluence install. ie. http://opensource.atlassian.com/confluence/spring", "The base url location to your Confluence install. ie. http://opensource.atlassian.com/confluence/spring");
            this._entryBaseUrl.CanFocus = true;
            this._entryBaseUrl.Name = "_entryBaseUrl";
            this._entryBaseUrl.Text = Mono.Addins.AddinManager.CurrentLocalizer.GetString("http://opensource.atlassian.com/confluence/spring");
            this._entryBaseUrl.IsEditable = true;
            this._entryBaseUrl.WidthChars = 40;
            this._entryBaseUrl.InvisibleChar = '●';
            this.table1.Add(this._entryBaseUrl);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this._entryBaseUrl]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._entryMaxSearchResults = new Gtk.Entry();
            this._entryMaxSearchResults.CanFocus = true;
            this._entryMaxSearchResults.Name = "_entryMaxSearchResults";
            this._entryMaxSearchResults.IsEditable = true;
            this._entryMaxSearchResults.InvisibleChar = '●';
            this.table1.Add(this._entryMaxSearchResults);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this._entryMaxSearchResults]));
            w3.TopAttach = ((uint)(3));
            w3.BottomAttach = ((uint)(4));
            w3.LeftAttach = ((uint)(1));
            w3.RightAttach = ((uint)(2));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._entryPassword = new Gtk.Entry();
            this._entryPassword.CanFocus = true;
            this._entryPassword.Name = "_entryPassword";
            this._entryPassword.IsEditable = true;
            this._entryPassword.Visibility = false;
            this._entryPassword.InvisibleChar = '●';
            this.table1.Add(this._entryPassword);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this._entryPassword]));
            w4.TopAttach = ((uint)(2));
            w4.BottomAttach = ((uint)(3));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._entryUsername = new Gtk.Entry();
            this._entryUsername.CanFocus = true;
            this._entryUsername.Name = "_entryUsername";
            this._entryUsername.Text = Mono.Addins.AddinManager.CurrentLocalizer.GetString("username1");
            this._entryUsername.IsEditable = true;
            this._entryUsername.InvisibleChar = '●';
            this.table1.Add(this._entryUsername);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this._entryUsername]));
            w5.TopAttach = ((uint)(1));
            w5.BottomAttach = ((uint)(2));
            w5.LeftAttach = ((uint)(1));
            w5.RightAttach = ((uint)(2));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._labelBaseUrl = new Gtk.Label();
            this._labelBaseUrl.Name = "_labelBaseUrl";
            this._labelBaseUrl.LabelProp = "* denotes a required field";
            this.table1.Add(this._labelBaseUrl);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this._labelBaseUrl]));
            w6.TopAttach = ((uint)(5));
            w6.BottomAttach = ((uint)(6));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._labelBaseUrl1 = new Gtk.Label();
            this._labelBaseUrl1.Name = "_labelBaseUrl1";
            this._labelBaseUrl1.LabelProp = "Base Url*";
            this.table1.Add(this._labelBaseUrl1);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this._labelBaseUrl1]));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._labelMaxSearchResults = new Gtk.Label();
            this._labelMaxSearchResults.Name = "_labelMaxSearchResults";
            this._labelMaxSearchResults.LabelProp = "Max Search Results";
            this.table1.Add(this._labelMaxSearchResults);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this._labelMaxSearchResults]));
            w8.TopAttach = ((uint)(3));
            w8.BottomAttach = ((uint)(4));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._labelPassword = new Gtk.Label();
            this._labelPassword.Name = "_labelPassword";
            this._labelPassword.LabelProp = "Password";
            this.table1.Add(this._labelPassword);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this._labelPassword]));
            w9.TopAttach = ((uint)(2));
            w9.BottomAttach = ((uint)(3));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._labelUsername = new Gtk.Label();
            this._labelUsername.Name = "_labelUsername";
            this._labelUsername.LabelProp = "Username";
            this.table1.Add(this._labelUsername);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table1[this._labelUsername]));
            w10.TopAttach = ((uint)(1));
            w10.BottomAttach = ((uint)(2));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this._saveButton = new Gtk.Button();
            this._saveButton.CanFocus = true;
            this._saveButton.Name = "_saveButton";
            this._saveButton.UseUnderline = true;
            this._saveButton.Xalign = 0F;
            this._saveButton.Label = "Save";
            this.table1.Add(this._saveButton);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table1[this._saveButton]));
            w11.TopAttach = ((uint)(4));
            w11.BottomAttach = ((uint)(5));
            w11.LeftAttach = ((uint)(1));
            w11.RightAttach = ((uint)(2));
            w11.XOptions = ((Gtk.AttachOptions)(0));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            this.Add(this.table1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this._saveButton.Released += new System.EventHandler(this.OnSaveButtonReleased);
        }
    }
}
